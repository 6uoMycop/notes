## General Commands Manual
### find
#### SYNOPSIS
```
find [path...] [expression]
```
#### OPTIONS
If no paths are given, the current directory is used.  If no expression is given, the expression `-print` is used.

#### EXPRESSIONS
The expression is made up of options (which affect overall operation rather than the processing of a specific file), tests,  and actions, all separated by operators.

##### OPTIONS
```
-maxdepth levels
       Descend at most levels (a non-negative integer) levels of directories below the command line arguments.
```
##### TESTS
```
-type c
       File is of type c:
       l      symbolic link;

-name pattern
       Base of file name (the path with the leading directories removed) matches shell pattern pattern.
```
##### ACTIONS
```
-exec command ;
       Execute command. All following arguments to find are taken to be arguments to the command until an
       argument consisting of `;' is encountered. The string `{}'  is  replaced  by  the current file
       name being processed everywhere it occurs in the arguments to the command. Both of these
       constructions might need to be escaped (with a `\') to protect them from expansion by the shell.
       The specified command is run once for each matched file.

-print print the full file name on the standard output, followed by a newline.
```

### rsync
#### DESCRIPTION
Rsync  is  a fast and extraordinarily versatile file copying tool. 
#### EXAMPLES
Here is a simple example that copies `/usr/local/` (recursively, in archive mode, using the `-a` swicth) to a remote system:
```
% rsync -a /usr/local/ root@remote_host:/usr/local/
```
#### OPTIONS
```
-a, --archive
       The -a switch tells rsync to operate in archive mode.
       This causes it to operate recursively and preserve permissions, ownership, symbolic links, device
       files, access times, and so on.

--delete
       This is where the --delete switch comes becomes useful. This switch tells rsync to delete any files
       in the destination directory that are not in the source directory.
```

### axel
#### SYNOPSIS
```
axel [OPTIONS] url1 [url2] [url...]
```
#### DESCRIPTION
Axel is a program that downloads a file from a FTP or HTTP server through multiple connection, each connection downloads its own part of the file.

### pssh
#### SYNOPSIS
```
pssh [-vi] [-h hosts_file] [-p par] [-t timeout] command ...
```
#### DESCRIPTION
pssh is a program for executing ssh in parallel on a number of hosts.
#### OPTIONS
```
-h host_file
       Read hosts from the given host_file.
       Lines in the host file are of the form [user@]host[:port].

-p parallelism
       Use the given number as the maximum number of concurrent connections.

-t timeout
       Make connections time out after the given number of seconds.

-i
       Display standard output and standard error as each host completes.

-v
       Include error messages from ssh with the -i and \ options.
```
#### EXAMPLE
Print "hello, world" from each host specified in the file hosts.txt:
```
pssh -i -h hosts.txt echo "hello, world"
```

### dpkg-query
#### SYNOPSIS
```
dpkg-query [option...] command
```
#### DESCRIPTION
dpkg-query is a tool to show information about packages listed in the dpkg database.
#### COMMANDS
```
-l, --list [package-name-pattern...]
       List  packages  matching given pattern. If no package-name-pattern is given, list all packages in
       /var/lib/dpkg/status, excluding the ones marked as not-installed (i.e. those which have been
       previously purged).

       The first three columns of the output show the desired action, the package status, and errors, in
       that order.

       Desired action:
         i = Install
         r = Remove
         p = Purge
         ...

       Package status:
         n = Not-installed
         U = Unpacked
         i = Installed
         ...

       Error flags:
         <empty> = (none)
         R = Reinst-required

 -W [package-name-pattern...]
        Just like the --list option this will list all packages matching the given pattern. However the
        output can be customized using the --showformat option. The default output format gives one line
        per matching package, each line having the name and installed version of the package, separated
        by a tab.
```
#### OPTIONS
```
-f=format
       This option is used to specify the format of the output --show will produce.

       Package information can be included by inserting variable references to package fields using the
       syntax "${field}‚Äù. The following fields are recognized:
           
           Depends
           Status (internal)
           Version
           ...
```

## BSD System Manager's Manual
### sudo
#### DESCRIPTION
```
-S
            read the password from the standard input instead of using the terminal device.
```
#### EXAMPLES
```
echo "ubuntu" | sudo -S apt-get update
```
